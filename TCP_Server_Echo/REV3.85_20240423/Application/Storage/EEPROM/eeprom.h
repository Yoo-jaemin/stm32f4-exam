#ifndef   __EEPROM_H__
#define   __EEPROM_H__


#ifdef __EEPROM_C__
	#define EEPROM_EXT
#else
	#define EEPROM_EXT extern
#endif

/* Start abbreviation */
/* End abbreviation */

/* Start Include */ 
#include "common.h"
/* End Include */

/* Start Define */
#define EEPROM_SIZE						( 2048 )
#define EEPROM_UPDATE_BUFF_SIZE			( 32 )
#define EEPROM_UPDATE_FIFO_SIZE			( 16 )
#define EEPROM_UPDATE_FIFO_MASK			( EEPROM_UPDATE_FIFO_SIZE - 1 )
#define EEPROM_SYS_PREFIX				( 0x0219 )
#define EEPROM_TAG_PREFIX				( 0x1546 )
/* End Define */

/* Start Enum */
enum {
	/* 000 */			SYSTEM_EEP_CRC,
	/* 001 */			SYSTEM_EEP_PREFIX,
	/* 002 */			SYSTEM_EEP_RES_02,
	/* 003 */			SYSTEM_EEP_RES_03,
	/* 004 */			SYSTEM_EEP_SENSOR_CT_SEN_LPF_WEIGHT_x1000,
	/* 005 */			SYSTEM_EEP_SENSOR_IR_SEN_LPF_WEIGHT_x1000,
	/* 006 */			SYSTEM_EEP_SENSOR_OTHERS_LPF_WEIGHT_x1000,
	/* 007 */			SYSTEM_EEP_RES_07,
	/* 008 */			SYSTEM_EEP_RES_08,
	/* 009 */			SYSTEM_EEP_RES_09,
	/* 010 */			SYSTEM_EEP_PASSWORD,
	/* 011 */			SYSTEM_EEP_LCD_BRIGHTNESS_LEVEL,
	/* 012 */			SYSTEM_EEP_RES_12,
	/* 013 */			SYSTEM_EEP_RES_13,
	/* 014 */			SYSTEM_EEP_MODBUS_UNIT_ID,
	/* 015 */			SYSTEM_EEP_RS485_BAUD_RATE,
	/* 016 */			SYSTEM_EEP_RS485_DATA_TYPE,
	/* 017 */			SYSTEM_EEP_RES_17,
	/* 018 */			SYSTEM_EEP_RES_18,
	/* 019 */			SYSTEM_EEP_RES_19,
	/* 020 */			SYSTEM_EEP_POE_MC_0_1,
	/* 021 */			SYSTEM_EEP_POE_MC_2_3,
	/* 022 */			SYSTEM_EEP_POE_MC_4_5,
	/* 023 */			SYSTEM_EEP_POE_IP_0_1,
	/* 024 */			SYSTEM_EEP_POE_IP_2_3,
	/* 025 */			SYSTEM_EEP_POE_NM_0_1,
	/* 026 */			SYSTEM_EEP_POE_NM_2_3,
	/* 027 */			SYSTEM_EEP_POE_GW_0_1,
	/* 028 */			SYSTEM_EEP_POE_GW_2_3,
	/* 029 */			SYSTEM_EEP_RES_29,
	/* 030 */			SYSTEM_EEP_RES_30,
	/* 031 */			SYSTEM_EEP_RES_31,
	/* 032 */			SYSTEM_EEP_mA_OUTPUT_MAINTENANCE_CH1,
	/* 033 */			SYSTEM_EEP_mA_OUTPUT_CAL_ZERO_uA_CH1,
	/* 034 */			SYSTEM_EEP_mA_OUTPUT_CAL_SPAN_uA_CH1,
	/* 035 */			SYSTEM_EEP_mA_OUTPUT_CAL_OFFS_uA_CH1,
	/* 036 */			SYSTEM_EEP_RES_36,
	/* 037 */			SYSTEM_EEP_RES_37,
	/* 038 */			SYSTEM_EEP_RES_38,
	/* 039 */			SYSTEM_EEP_mA_OUTPUT_MAINTENANCE_CH2,
	/* 040 */			SYSTEM_EEP_mA_OUTPUT_CAL_ZERO_uA_CH2,
	/* 041 */			SYSTEM_EEP_mA_OUTPUT_CAL_SPAN_uA_CH2,
	/* 042 */			SYSTEM_EEP_mA_OUTPUT_CAL_OFFS_uA_CH2,
	/* 043 */			SYSTEM_EEP_RES_43,
	/* 044 */			SYSTEM_EEP_RES_44,
	/* 045 */			SYSTEM_EEP_RES_45,
	/* 046 */			SYSTEM_EEP_FLOW_CTRL_P_CALCULATION_SCALE,
	/* 047 */			SYSTEM_EEP_FLOW_CTRL_PTM_OFFS,
	/* 048 */			SYSTEM_EEP_FLOW_CTRL_PTM_GAIN,
	/* 049 */			SYSTEM_EEP_FLOW_CTRL_SPAN_mL,
	/* 050 */			SYSTEM_EEP_FLOW_CTRL_SPAN_FREQ_x100,
	/* 051 */			SYSTEM_EEP_FLOW_CTRL_SPAN_DUTY_x100,
	/* 052 */			SYSTEM_EEP_FLOW_CTRL_SPAN_L,
	/* 053 */			SYSTEM_EEP_FLOW_CTRL_SPAN_H,
	/* 054 */			SYSTEM_EEP_FLOW_CTRL_ZERO_L,
	/* 055 */			SYSTEM_EEP_FLOW_CTRL_ZERO_H,
	/* 056 */			SYSTEM_EEP_FLOW_CTRL_TARG_mL,
	/* 057 */			SYSTEM_EEP_FLOW_TRB_CHECK_SEC,
	/* 058 */			SYSTEM_EEP_RES_58,
	/* 059 */			SYSTEM_EEP_RES_59,
	/* 060 */			SYSTEM_EEP_RES_60,
	/* 061 */			SYSTEM_EEP_RELAY_OPTION_TRB,
	/* 062 */			SYSTEM_EEP_RELAY_OPTION_AL1,
	/* 063 */			SYSTEM_EEP_RELAY_OPTION_AL2,
	/* 064 */			SYSTEM_EEP_RELAY_BLINK_TIME_TRB,
	/* 065 */			SYSTEM_EEP_RELAY_BLINK_TIME_AL1,
	/* 066 */			SYSTEM_EEP_RELAY_BLINK_TIME_AL2,
	/* 067 */			SYSTEM_EEP_RES_67,
	/* 068 */			SYSTEM_EEP_RES_68,
	/* 069 */			SYSTEM_EEP_RES_69,
	/* 070 */			SYSTEM_EEP_RES_70,
	/* 071 */			SYSTEM_EEP_MEASURING_MODE,
	/* 072 */			SYSTEM_EEP_MEASURING_NOT_STABLE_DEC_TIME,
	/* 073 */			SYSTEM_EEP_RES_73,
	/* 074 */			SYSTEM_EEP_RES_74,
	/* 075 */			SYSTEM_EEP_RES_75,
	/* 076 */			SYSTEM_EEP_RES_76,
	/* 077 */			SYSTEM_EEP_RES_77,
	/* 078 */			SYSTEM_EEP_RES_78,
	/* 079 */			SYSTEM_EEP_LOG_INTERVAL_100MSEC,
	/* 080 */			SYSTEM_EEP_RES_80,
	/* 081 */			SYSTEM_EEP_RES_81,
	/* 082 */			SYSTEM_EEP_RES_82,
	/* 083 */			SYSTEM_EEP_RES_83,
	/* 084 */			SYSTEM_EEP_RES_84,
	/* 085 */			SYSTEM_EEP_RES_85,
	/* 086 */			SYSTEM_EEP_RES_86,
	/* 087 */			SYSTEM_EEP_RES_87,
	/* 088 */			SYSTEM_EEP_RES_88,
	/* 089 */			SYSTEM_EEP_RES_89,
	/* 090 */			SYSTEM_EEP_BUZZER_VOLUME,
	/* 091 */			SYSTEM_EEP_RES_91,
	/* 092 */			SYSTEM_EEP_RES_92,
	/* 093 */			SYSTEM_EEP_RES_93,
	/* 094 */			SYSTEM_EEP_RES_94,
	/* 095 */			SYSTEM_EEP_RES_95,
	/* 096 */			SYSTEM_EEP_RES_96,
	/* 097 */			SYSTEM_EEP_RES_97,
	/* 098 */			SYSTEM_EEP_RES_98,
	/* 099 */			SYSTEM_EEP_RES_99,
						SYSTEM_EEP_MAX
};
enum {
	/* 000 */			SYSTEM_TAG_PREFIX = 200,
	/* 001 */			SYSTEM_TAG_SERIAL_NUM_00,
	/* 002 */			SYSTEM_TAG_SERIAL_NUM_01,
	/* 003 */			SYSTEM_TAG_SERIAL_NUM_02,
	/* 004 */			SYSTEM_TAG_SERIAL_NUM_03,
	/* 005 */			SYSTEM_TAG_SERIAL_NUM_04,
	/* 006 */			SYSTEM_TAG_SERIAL_NUM_05,
	/* 007 */			SYSTEM_TAG_NAME_00,
	/* 008 */			SYSTEM_TAG_NAME_01,
	/* 009 */			SYSTEM_TAG_NAME_02,
	/* 010 */			SYSTEM_TAG_NAME_03,
	/* 011 */			SYSTEM_TAG_NAME_04,
	/* 012 */			SYSTEM_TAG_NAME_05,
	/* 013 */			SYSTEM_TAG_NAME_06,
	/* 014 */			SYSTEM_TAG_NAME_07,
	/* 015 */			SYSTEM_TAG_NAME_08,
	/* 016 */			SYSTEM_TAG_NAME_09,
	/* 017 */			SYSTEM_TAG_NAME_10,
	/* 018 */			SYSTEM_TAG_LOCATION_00,
	/* 019 */			SYSTEM_TAG_LOCATION_01,
	/* 020 */			SYSTEM_TAG_LOCATION_02,
	/* 021 */			SYSTEM_TAG_LOCATION_03,
	/* 022 */			SYSTEM_TAG_LOCATION_04,
	/* 023 */			SYSTEM_TAG_LOCATION_05,
	/* 024 */			SYSTEM_TAG_LOCATION_06,
	/* 025 */			SYSTEM_TAG_LOCATION_07,
	/* 026 */			SYSTEM_TAG_LOCATION_08,
	/* 027 */			SYSTEM_TAG_LOCATION_09,
	/* 028 */			SYSTEM_TAG_LOCATION_10,
	/* 029 */			SYSTEM_TAG_MESSAGE_00,
	/* 030 */			SYSTEM_TAG_MESSAGE_01,
	/* 031 */			SYSTEM_TAG_MESSAGE_02,
	/* 032 */			SYSTEM_TAG_MESSAGE_03,
	/* 033 */			SYSTEM_TAG_MESSAGE_04,
	/* 034 */			SYSTEM_TAG_MESSAGE_05,
	/* 035 */			SYSTEM_TAG_MESSAGE_06,
	/* 036 */			SYSTEM_TAG_MESSAGE_07,
	/* 037 */			SYSTEM_TAG_MESSAGE_08,
	/* 038 */			SYSTEM_TAG_MESSAGE_09,
	/* 039 */			SYSTEM_TAG_MESSAGE_10
};
/* End Enum */

/* Start Struct */
typedef struct {
	U16					Prefix;
	U16					SerialNumber[6];
	U16					Name[11];
	U16					Location[11];
	U16					Message[11];
}EEPROM_TagType;

typedef struct {
	U8					UpdateHp;
	U8					UpdateTp;
	U16					UpdateData[EEPROM_UPDATE_FIFO_SIZE][EEPROM_UPDATE_BUFF_SIZE];
	U16					UpdateSize[EEPROM_UPDATE_FIFO_SIZE];
	U16					UpdateStartAddress[EEPROM_UPDATE_FIFO_SIZE];
	U16					Sram[SYSTEM_EEP_MAX];
	U16					*pDefault;
	bool				CRC_Error;
	EEPROM_TagType		Tag;
}EEPROM_HandleType;
/* End Struct */

/* Start Function */
EEPROM_EXT bool EEPROM_Init( void );
EEPROM_EXT void EEPROM_Task( void );
EEPROM_EXT void EEPROM_Update( U16 *pData, U16 Address, U16 Size );
EEPROM_EXT void EEPROM_Tag_Write( U16 *pData, U16 Address, U16 Size );
/* End Function */

/* Start Variable */
EEPROM_EXT EEPROM_HandleType		EepHandle;                   
/* End Variable */


#endif // __EEPROM_H__


